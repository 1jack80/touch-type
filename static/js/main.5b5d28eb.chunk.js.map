{"version":3,"sources":["elements/Header.js","components/metric.js","components/words.js","containers/inputArea.js","components/outro.js","containers/App.js","index.js"],"names":["PageHeader","className","Metric","props","value","unit","Words","class","words","split","map","word","index","length","indexOf","Math","random","Date","getTime","toString","replace","InputArea","inputValue","handleChange","validState","useEffect","document","getElementById","style","width","setValidation","useState","validation","Fragment","type","id","tabIndex","autoCapitalize","autoComplete","autoSave","autoCorrect","autoFocus","onChange","Outro","wpm","cpm","accuracy","onClick","window","location","reload","txtgen","require","App","state","started","isValidInput","activeWord","typed","lastTyped","correctlyTyped","time","bind","validateInput","editWords","getWords","setWords","a","this","setState","then","prevProps","prevState","clearInterval","timer","playOutro","sentence","modal","querySelector","classList","add","toggle","slice","nextTyped","event","setInterval","target","at","submitInput","trimStart","href","Component","reactDom","render"],"mappings":"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","file":"static/js/main.5b5d28eb.chunk.js","sourcesContent":["const PageHeader = () => {\n  return (\n    <>\n      <header>\n        <h6 className=\"title title-sub\">Typing test</h6>\n        <h2 className=\"title title-main\">Test your typing skills</h2>\n        <div className=\"seperator\"></div>\n      </header>\n\n    </>\n  );\n};\n\nexport default PageHeader;\n","const Metric = (props) => {\n  return (\n    <div className=\"metric\">\n      <h4 className=\"metric-value\">{props.value}</h4>\n      <p className=\"metric-unit\">{props.unit}</p>\n    </div>\n  );\n};\n\nexport default Metric;\n","const Words = (props) => {\n  return (\n    <p className={`words  ${props.class}`}>\n      {props.words.split(\" \").map((word, index) => {\n        if (word.length > 0) {\n          if (!word.indexOf(\"/*0*/\")) {\n            return (\n              <span key={Math.random()*10 + index + new Date().getTime().toString()} className=\"word wrong\">\n                {word.replace(\"/*0*/\", \"\")}\n              </span>\n            );\n          }\n          return (\n            <span key={Math.random()*10 + index + new Date().getTime().toString()} className=\"word\">\n              {word}\n            </span>\n          );\n        } else {\n          return <span key={new Date().getTime().toString()}></span>;\n        }\n      })}\n    </p>\n  );\n};\n\nexport default Words;\n","import React, { useEffect, useState } from 'react'\n\nfunction InputArea(props) {\n  const {inputValue, handleChange, validState} = props;\n\n  useEffect( () => {\n    adjustInputSize();\n\n    if(validState){\n      setValidation(\"\")\n    }\n    else{\n      setValidation(\"wrong\")\n    }\n  })\n  const [validation, setValidation] = useState(\"\");\n\n\n  function adjustInputSize() {\n    let input = document.getElementById(\"typing\"); \n    input.style.width = inputValue.length + 1 + \"ch\";\n  }\n\n  return ( \n    <React.Fragment>\n      <p className=\"input-indicator\">Start typing here</p>\n      <input\n            type=\"text\" \n            id=\"typing\"\n            tabIndex=\"1\"\n            autoCapitalize=\"off\"\n            autoComplete=\"off\"\n            autoSave=\"off\"\n            autoCorrect=\"off\"\n            autoFocus \n            value={inputValue}\n            className={validation}\n            onChange={handleChange}\n          />\n    </React.Fragment>\n  )\n}\n\nexport default InputArea","import React from 'react'\n\nfunction Outro(props) {\n    const {wpm, cpm, accuracy } = props;\n    return (\n    <div className=\"outro-background hidden\" id=\"outro-modal\">    \n            <section >\n                <div className=\"results\">\n                    <p className=\"wpm result\"><span className=\"value\">{wpm}</span><span className=\"unit\">words/min</span></p>\n                    <p className=\"cpm result\"><span className=\"value\">{cpm}</span><span className=\"unit\">chars/min</span></p>\n                    <p className=\"accuracy result\"><span className=\"value\">{accuracy}%</span><span className=\"unit\">accuracy</span></p>\n                </div>\n                <button className=\"btn btn-reload\" onClick={() => {window.location.reload()}}>try again</button>\n            </section>\n    </div>\n    )\n}\n\nexport default Outro\n","import React, { Component } from \"react\";\nimport PageHeader from \"../elements/Header\"; \nimport Metric from \"../components/metric\"\nimport Words from \"../components/words\";\nimport InputArea from \"./inputArea\"; \nimport Outro from \"../components/outro\";\nconst txtgen = require(\"txtgen\");\n\n \n\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { \n      started: false,\n      words: \"\",\n      inputValue: \"\",\n      isValidInput: false,\n      activeWord: \"\",\n      typed: \"\",\n      lastTyped: true,\n      correctlyTyped: \"\",\n      time: 60,\n      cpm: 0,\n      wpm: 0,  \n    }; \n    this.handleChange = this.handleChange.bind(this);\n    this.validateInput = this.validateInput.bind(this);\n    this.editWords = this.editWords.bind(this);\n    this.getWords = this.getWords.bind(this); \n    this.setWords = this.setWords.bind(this); \n  } \n  async setWords() {\n    this.setState({ \n        words: this.getWords(),\n      })\n  }\n  componentDidMount(){\n    this.setWords().then( () => {\n      this.setState({\n        activeWord: this.state.words.split(\" \")[0],\n      })\n    })\n  }\n  componentDidUpdate(prevProps, prevState){\n    if(this.state.time === 0){\n      clearInterval(this.timer) \n      this.playOutro();\n    }\n    if(prevState.inputValue !== this.state.inputValue){\n      this.validateInput().then( () =>{  \n        this.editWords();\n      }) \n    }\n    if (prevState.typed !== this.state.typed && this.state.lastTyped){\n      this.setState({\n        correctlyTyped: this.state.correctlyTyped + prevState.activeWord + \" \",\n        cpm: (this.state.correctlyTyped.length - this.state.correctlyTyped.split(\" \").length +1),\n        wpm: this.state.correctlyTyped.split(\" \").length ,\n      })\n    }\n    if(this.state.words.split(\" \").length < 4){\n      this.setState({\n        words: this.state.words + \" \" + this.getWords()\n      })\n    }\n  } \n  getWords() { \n    return txtgen.sentence();\n  }\n\n  playOutro() {\n    let modal = document.getElementById(\"outro-modal\");\n    let iSection = document.querySelector(\".input-area\");\n    iSection.classList.add(\"hidden\");\n    modal.classList.toggle(\"hidden\");\n  }\n   \n  async validateInput() {\n    this.setState( {\n      isValidInput: (this.state.activeWord.indexOf(this.state.inputValue) === 0)\n    })\n  }\n\n  editWords() {\n    const { inputValue, activeWord, isValidInput} = this.state;\n    if(isValidInput){\n      this.setState(\n        function(prevState){\n        return {words: activeWord.slice(inputValue.length) +\n        this.state.words.slice(this.state.words.indexOf(\" \"))}\n      })\n    }\n    \n  }\n\n  async submitInput() {\n    let nextTyped = this.state.inputValue === this.state.activeWord ? this.state.inputValue :\n                    this.state.inputValue.length ? \"/*0*/\"+this.state.inputValue: \"/*0*/\"+this.state.activeWord;\n\n      this.setState( function(prevState, prevProps) {\n        return {\n           typed: `${prevState.typed} ${nextTyped}`,\n           lastTyped: this.state.inputValue === this.state.activeWord\n\n      }\n       }) \n    \n  }\n   handleChange(event) {\n     if(!this.state.started){\n      this.setState({started: true})\n      this.timer = setInterval(() => {\n        this.setState({\n          time: (this.state.time -1)\n        })\n      }, 1000);\n      document.querySelector(\".input-indicator\").classList.add(\"hidden\");\n     }\n    if(event.target.value.at(-1) !== \" \"){\n      this.setState({inputValue: event.target.value}) \n    }\n    else{\n      this.submitInput().then( () => {\n        // if(this.state.inputValue.length === 0){\n        //   this.setState(\n        //     // {words: this.state.words.slice(this.state.activeWord.length + 1)}\n        //   )\n        // }\n        this.setState({\n          words: this.state.words.trimStart()\n        })\n        \n      }).then( () =>{\n\n        // reset active word\n        this.setState( \n          {activeWord: this.state.words.split(\" \")[0]}\n        )\n      //clear inputValue\n      this.setState( \n        {inputValue: \"\"}\n      )\n      }).then(() =>{\n        if(this.state.lastTyped=== false){\n          this.setState({\n            words: this.state.words.slice(this.state.activeWord.length+1),\n          })\n          this.setState({\n            activeWord: this.state.words.split(\" \")[0]\n\n          })\n        }\n      })\n    }\n  } \n\n  \n  render() {\n    return (\n      <div className= \"container container-app \">\n\n        <PageHeader /> \n\n        <section className=\"section-metrics\">\n          <Metric value={this.state.time} unit={\"seconds\"} />\n          <Metric\n            value={this.state.wpm}\n            unit={\"words/min\"}\n          />\n          <Metric value={this.state.cpm} unit={\"chars/min\"} />\n        </section> \n        <div className=\"container-input-area\">\n          <section className=\"input-area\">\n            <Words class={\"typed\"} words={this.state.typed} />\n          \n            <InputArea  validState={this.state.isValidInput} inputValue={this.state.inputValue} handleChange={this.handleChange}/>\n            <Words class={\"untyped\"} words={this.state.words} />\n          </section>\n        </div>\n        <footer>\n          <h4>Developed by <a href=\"http://github.com/David-Main\" target=\"blank\">David Mainoo</a></h4>\n          <h4>Background obtained from <a href=\"https://www.design.svgbackgrounds.com/\">svgbackgrounds</a></h4>\n        </footer>\n        <Outro wpm={this.state.wpm} cpm={this.state.cpm} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport reactDom from \"react-dom\";\nimport App from \"./containers/App\";\nimport \"./assets/styles.css\";\n\nreactDom.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}